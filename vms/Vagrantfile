MASTER_NUM=2
WORKER_NUM=1
IP_BASE="192.168.56."
IP_START=2
SIDE_OS=0


Vagrant.configure("2") do |config|

  config.vm.box = "hashicorp/bionic64"
  config.vbguest.auto_update = false
  
  config.vm.provision "shell", env: {"IP_BASE" => IP_BASE, "MASTER_NUM" => MASTER_NUM, "WORKER_NUM" => WORKER_NUM, "IP_START" => IP_START}, inline: <<-SHELL
      #set -euxo pipefail
      echo "$IP_BASE$((IP_START)) ALoadBalancer" >> /etc/hosts
      for i in `seq 1 $MASTER_NUM`
      do
        echo "$IP_BASE$((IP_START+i)) Amaster-0$((i))" >> /etc/hosts
      done
      for i in `seq 1 $WORKER_NUM`
      do
        echo "$IP_BASE$((IP_START+MASTER_NUM+i)) Aworker-0$((i))" >> /etc/hosts
      done
  SHELL
  
  config.vm.provision "shell", path: "scripts/common.sh"
  
  if SIDE_OS == 0
    config.vm.network "public_network", bridge: "Wireless LAN adapter Wi-Fi"
  elsif SIDE_OS == 1
    config.vm.network "public_network", bridge: "en0: Wi-Fi"
  elsif SIDE_OS == 2
    config.vm.network "public_network", bridge: "Wireless LAN adapter Wi-Fi"
  else
    config.vm.network "public_network", bridge: "eth0"
  end
  
  if SIDE_OS == 0
    config.vm.define "LoadBalancer" do |lb|
	  lb.vm.hostname = "LoadBalancer"
	  # lb.vm.network "private_network", ip: IP_BASE + "#{IP_START}"
	  lb.vm.provision "shell", path: "scripts/lb.sh"
	  lb.vm.provider "virtualbox" do |v|
		  v.name = "LoadBalancer"
	      v.memory = 2048
      end
    end
  end
  
  (1..MASTER_NUM).each do |i|
    
    config.vm.define "master-0#{i}" do |master|
	  if SIDE_OS == 0
        master.vm.hostname = "master-0#{i}"
	  else
	    master.vm.hostname = "#{`hostname`[0..-2]}-master-0#{i}"
	  end
      # master.vm.network "private_network", ip: IP_BASE + "#{IP_START+i}"
      if i == 1 and SIDE_OS == 0
        master.vm.provision "shell", path: "scripts/boss.sh"
      else
        master.vm.provision "shell", path: "scripts/master.sh"
      end
      
      if i == MASTER_NUM
        master.vm.provision "shell", path: "scripts/master_finish.sh"
      end

	master.vm.provider "virtualbox" do |v|
        v.name = "master-0#{i}"
        v.memory = 4096
        #v.cpus = 2
    	end
    end
  end

  (1..WORKER_NUM).each do |i|
    
    config.vm.define "worker-0#{i}" do |worker|
	  if SIDE_OS == 0
        worker.vm.hostname = "worker-0#{i}"
	  else
	    worker.vm.hostname = "#{`hostname`[0..-2]}-worker-0#{i}"
	  end
      # worker.vm.network "private_network", ip: IP_BASE + "#{IP_START+MASTER_NUM+i}"
      worker.vm.provision "shell", path: "scripts/worker.sh"
	  worker.vm.provider "virtualbox" do |v|
        v.name = "worker-0#{i}"
        v.memory = 6656
        #v.cpus = 2
      end
    end
  end
end
